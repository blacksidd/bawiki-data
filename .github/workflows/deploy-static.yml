# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  schedule:
    - cron: "0 8 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions: write-all

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Environment
      - name: Setup Py 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Set Up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Prettier
        run: npm i -g prettier

      # Pre deploy
      - name: Run pre-deploy.sh
        run: sh scripts/pre-deploy.sh
      - name: Format with Prettier
        run: prettier -c -w .
      - name: Commit changes
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git commit -m "pre deploy" -a || exit 0
          git push

      # Upload Pages
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: "."
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      # Purge Cache
      - name: Purge Cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          # Zone is required by both authentication methods
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
